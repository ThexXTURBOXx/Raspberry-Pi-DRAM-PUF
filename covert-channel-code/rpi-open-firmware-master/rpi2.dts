/dts-v1/;

// #define IRQ_TYPE_LEVEL_HIGH      4

#define BCM2835_PLLB_ARM          7
#define BCM2835_CLOCK_UART       19
#define BCM2835_CLOCK_VPU        20
#define BCM2835_CLOCK_V3D        21
#define BCM2835_CLOCK_ISP        22
#define BCM2835_CLOCK_H264       23
#define BCM2835_CLOCK_PERI_IMAGE 29
#define BCM2835_CLOCK_CAM1       46

#define RPI_POWER_DOMAIN_UNICAM1 13

/memreserve/ 0x00000000 0x00001000;

/ {
  compatible = "raspberrypi,2-model-b", "brcm,bcm2836";
  model = "Raspberry Pi 2 Model B, with open firmware";
  #address-cells = <0x01>;
  #size-cells = <0x01>;
  interrupt-parent = <&intc>;

  aliases {
    ethernet0 = &ethernet;
    mmc0 = "/soc/mmc@7e202000";
    framebuffer0 = &framebuffer0;
  };
  chosen {
    stdout-path = &ttyAMA0;
  };
  system {
    compatible = "simple-bus";
    #address-cells = <1>;
    #size-cells = <1>;
    ranges = <>;
    framebuffer0: framebuffer@8000000 {
      compatible = "simple-framebuffer";
      reg = <0x8000000 160000>;
      width = <200>;
      height = <200>;
      stride = <800>;
      format = "a8r8g8b8";
      status = "disabled"; // disabled by default, the bootloader will fill in the right numbers, and enable
    };
  };
  memory {
    device_type = "memory";
  };
  soc {
    compatible = "simple-bus";
    #address-cells = <0x01>;
    #size-cells = <0x01>;
    //        child       parent       length
    ranges = <0x7e000000 0x3f000000 0x1000000 /* map the MMIO space to 0x3f000000 in arm, 16mb long */
              0x40000000 0x40000000 0x1000>; /* identity map the local_intc, 0x1000 bytes long */
    dma-ranges = <0xc0000000 0x00 0x3f000000>; /* map arm physical 0 to the uncached alias, 1008mb long */
    ttyAMA0: serial@7e201000 {
      compatible = "brcm,bcm2835-pl011", "arm,pl011", "arm,primecell";
      reg = <0x7e201000 0x200>;
      interrupts = <2 25>;        // bank 2 irq 25, aka gpu irq 57
      clocks = <&clocks BCM2835_CLOCK_UART
                &clocks BCM2835_CLOCK_VPU>;
      clock-names = "uartclk", "apb_pclk";
      arm,primecell-periphid = <0x241011>;
      cts-event-workaround;
      //pinctrl-names = "default";
      //pinctrl-0 = <0x08 0x09>;
      status = "okay";
    };
    serial@7e215040 {
      compatible = "brcm,bcm2835-aux-uart";
      reg = <0x7e215040 0x40>;
      //interrupts = <0x01 0x1d>;
      //clocks = <0x12 0x00>;
      status = "okay";
      //pinctrl-names = "default";
      //pinctrl-0 = <0x13>; FIXME, should refer to a pinset in the gpio block
    };
    dma: dma@7e007000 {
      compatible = "brcm,bcm2835-dma";
      reg = <0x7e007000 0xf00>;
      interrupts = <1 16>,
                   <1 17>,
                   <1 18>,
                   <1 19>,
                   <1 20>,
                   <1 21>,
                   <1 22>,
                   <1 23>,
                   <1 24>,
                   <1 25>,
                   <1 26>,
                   /* dma channel 11-14 share one irq */
                   <1 27>,
                   <1 27>,
                   <1 27>,
                   <1 27>,
                   /* unused shared irq for all channels */
                   <1 28>;
      interrupt-names = "dma0",
                        "dma1",
                        "dma2",
                        "dma3",
                        "dma4",
                        "dma5",
                        "dma6",
                        "dma7",
                        "dma8",
                        "dma9",
                        "dma10",
                        "dma11",
                        "dma12",
                        "dma13",
                        "dma14",
                        "dma-shared-all";
      #dma-cells = <1>;
      brcm,dma-channel-mask = <0x7f30>;
    };
    intc: interrupt-controller@7e00b200 {
      compatible = "brcm,bcm2836-armctrl-ic";
      reg = <0x7e00b200 0x200>;
      interrupt-controller;
      #interrupt-cells = <0x02>;
      interrupt-parent = <&local_intc>;
      interrupts = <8 4>;
    };
    // allows linux to reboot by setting up the watchdog and not feeding it
    pm: watchdog@7e100000 {
      compatible = "brcm,bcm2835-pm", "brcm,bcm2835-pm-wdt";
      #power-domain-cells = <1>;
      #reset-cells = <1>;
      reg = <0x7e100000 0x114>, <0x7e00a000 0x24>;
      clocks = <&clocks BCM2835_CLOCK_V3D>, <&clocks BCM2835_CLOCK_PERI_IMAGE>, <&clocks BCM2835_CLOCK_H264>, <&clocks BCM2835_CLOCK_ISP>;
      clock-names = "v3d", "peri_image", "h264", "isp";
      system-power-controller;
    };
    clocks: cprman@7e101000 {
      compatible = "brcm,bcm2835-cprman";
      #clock-cells = <1>;
      reg = <0x7e101000 0x2000>;

      /* CPRMAN derives almost everything from the
       * platform's oscillator.  However, the DSI
       * pixel clocks come from the DSI analog PHY.
       */
      clocks = <&clk_osc>;
              //<&dsi0 0>, <&dsi0 1>, <&dsi0 2>,
              //<&dsi1 0>, <&dsi1 1>, <&dsi1 2>;
    };
    gpio: gpio@7e200000 {
      compatible = "brcm,bcm2835-gpio";
      reg = <0x7e200000 0xb4>;
      interrupts = <&intc 0x11>,
                   <&intc 0x12>;
      gpio-controller;
      #gpio-cells = <0x02>;
      interrupt-controller;
      #interrupt-cells = <0x02>;
      pinctrl-names = "default";

      i2c0_bus0_pins: i2c0_gpio0 {
        brcm,pins = <0 1>;
        brcm,function = <0x04>;
      };
      i2c0_bus28_pins: i2c0_gpio28 {
        // on a pi2, this leads to the camera sensor
        // the camera is only going to respond if gpio41 is HIGH
        brcm,pins = <28 29>;
        brcm,function = <0x04>;
      };
      i2c0_cam: i2c0_gpio44 {
        // note, do not use on pi2
        brcm,pins = <44 45>;
        brcm,function = <0x05>;
      };
      i2c0_bus46_pins: i2c0_bus46 {
        brcm,pins = <46 47>;
        brcm,function = <0x04>;
      };

      i2c1_bus2: i2c1_gpio2 {
        brcm,pins = <2 3>;
        brcm,function = <0x04>;
      };
      i2c1_cam: i2c1_gpio44 {
        brcm,pins = <44 45>;
        brcm,function = <0x06>;
      };
      i2c1_smps: i2c1_smps {
        brcm,pins = <46 47>;
        brcm,function = <0x05>;
      };

      sdhost: sdhost_gpio48 {
        brcm,pins = <48 49 50 51 52 53>;
        brcm,function = <0x04>;
      };
    };
    mmc@7e202000 {
      compatible = "brcm,bcm2835-sdhost";
      reg = <0x7e202000 0x100>;
      interrupts = <2 24>;        // bank 2 irq 24, aka gpu irq 56
      clocks = <&clocks BCM2835_CLOCK_VPU>;
      dmas = <&dma (13|(1<<29))>; //0x2000000d>;
      dma-names = "rx-tx";
      status = "okay";
      pinctrl-names = "default";
      pinctrl-0 = <&sdhost>;
      bus-width = <0x04>;
      brcm,overclock-50 = <0x00>;
      brcm,pio-limit = <0x01>;
      //brcm,debug = <1>;
    };
    i2c0: i2c@7e205000 {
      compatible = "brcm,bcm2835-i2c";
      reg = <0x7e205000 0x200>;
      interrupts = <2 21>;
      clocks = <&clocks BCM2835_CLOCK_VPU>;
      #address-cells = <1>;
      #size-cells = <0>;
      //pinctrl-names = "default";
      //pinctrl-0 = <&i2c0_bus0>;
      clock-frequency = <100000>;
    };
    csi1: csi@7e801000 {
      compatible = "brcm,bcm2835-unicam";
      reg = <0x7e801000 0x800>, <0x7e802004 0x4>;
      interrupts = <2 7>;
      clocks = <&clocks BCM2835_CLOCK_CAM1>, <&clocks BCM2835_CLOCK_VPU>;
      clock-names = "lp", "vpu";
      #address-cells = <1>;
      #size-cells = <0>;
      #clock-cells = <1>;
      //power-domains = <&power RPI_POWER_DOMAIN_UNICAM1>;
      brcm,num-data-lanes = <2>;
      status = "disabled";
      port {
        csi1_ep: endpoint {
          remote-endpoint = <&ov5647_0>;
          data-lanes = <1 2>;
        };
      };
    };
    i2c1: i2c@7e804000 {
      compatible = "brcm,bcm2835-i2c";
      reg = <0x7e804000 0x1000>;
      interrupts = <2 21>;
      clocks = <&clocks BCM2835_CLOCK_VPU>;
      #address-cells = <1>;
      #size-cells = <0>;
      //pinctrl-names = "default";
      //pinctrl-0 = <&i2c1>;
      clock-frequency = <100000>; // 100khz
    };
    i2c@7e805000 { // i2c2
      compatible = "brcm,bcm2835-i2c";
      reg = <0x7e805000 0x1000>;
      interrupts = <2 21>;
      clocks = <&clocks BCM2835_CLOCK_VPU>;
      #address-cells = <1>;
      #size-cells = <0>;
      clock-frequency = <100000>; // 100khz
    };
    i2cmux0 {
      compatible = "i2c-mux-pinctrl";
      #address-cells = <1>;
      #size-cells = <0>;
      i2c-parent = <&i2c0>;
      pinctrl-names = "bus0", "bus28";
      pinctrl-0 = <&i2c0_bus0_pins>;
      pinctrl-1 = <&i2c0_bus28_pins>;

      i2c0_bus0: i2c@0 {
        reg = <0>;
        #address-cells = <1>;
        #size-cells = <0>;
      };
      i2c0_bus28: i2c@1 {
        reg = <1>;
        #address-cells = <1>;
        #size-cells = <0>;
        ov5647: ov5647@36 {
          compatible = "ovti,ov5647";
          reg = <0x36>;
          pwdn-gpios = <&gpio 41 1>, <&gpio 32 1>;
          clocks = <&ov5647_clk>;
          rotation = <0>;
          orientation = <2>;
          status = "disabled";
          port {
            ov5647_0: endpoint {
              remote-endpoint = <&csi1_ep>;
              clock-lanes = <0>;
              data-lanes = <1 2>;
              clock-noncontinuous;
              link-frequencies = /bits/ 64 <297000000>;
            };
          };
        };
      };
    };

    i2cmux1 {
      compatible = "i2c-mux-pinctrl";
      #address-cells = <1>;
      #size-cells = <0>;
      i2c-parent = <&i2c1>;
      pinctrl-names = "bus2", "cam1", "smps1";
      pinctrl-0 = <&i2c1_bus2>;
      pinctrl-1 = <&i2c1_cam>;
      pinctrl-2 = <&i2c1_smps>;
      status = "disabled"; // not much need for the 2nd mux
    };
    local_intc: local_intc@40000000 {
      compatible = "brcm,bcm2836-l1-intc";
      reg = <0x40000000 0x100>;
      interrupt-controller;
      #interrupt-cells = <2>;
      interrupt-parent = <&local_intc>;
    };
    usb: usb@7e980000 {
      compatible = "brcm,bcm2835-usb";
      reg = <0x7e980000 0x10000>;
      interrupts = <1 9>;
      #address-cells = <1>;
      #size-cells = <0>;
      clocks = <&clk_usb>;
      clock-names = "otg";
      phys = <&usbphy>;
      phy-names = "usb2-phy";
      usb1@1 {
        compatible = "usb424,9514";
        reg = <1>;
        #address-cells = <1>;
        #size-cells = <0>;
        ethernet: usbether@1 {
          compatible = "usb424,ec00";
          reg = <1>;
          local-mac-address = [ b8 27 eb 77 df 95 ];
        };
      };
    };
  };
  clocks {
    compatible = "simple-bus";
    #address-cells = <1>;
    #size-cells = <0>;

    clk_osc: clock@3 {
      compatible = "fixed-clock";
      reg = <3>;
      #clock-cells = <0>;
      clock-output-names = "osc";
      clock-frequency = <19200000>;
    };
    clk_usb: clock@4 {
      compatible = "fixed-clock";
      reg = <4>;
      #clock-cells = <0>;
      clock-output-names = "otg";
      clock-frequency = <480000000>;
    };
    ov5647_clk: camera-clk {
      compatible = "fixed-clock";
      #clock-cells = <0>;
      clock-frequency = <25000000>;
    };
  };
  usbphy: phy {
    compatible = "usb-nop-xceiv";
    #phy-cells = <0>;
  };
  arm-pmu {
    compatible = "arm,cortex-a7-pmu";
    interrupt-parent = <&local_intc>;
    interrupts = <9 4>;
  };
  timer {
    compatible = "arm,armv7-timer";
    interrupt-parent = <&local_intc>;
    interrupts = <0x00 0x04
                  0x01 0x04
                  0x03 0x04
                  0x02 0x04>;
    always-on;
  };
  cpus {
    #address-cells = <1>;
    #size-cells = <0>;
    v7_cpu0: cpu@0 {
      device_type = "cpu";
      compatible = "arm,cortex-a7";
      reg = <0xf00>;
      clock-frequency = <800000000>; // TODO, set from loader.cc?
      operating-points = <
        /* khz    uV */
        100000    1100000
        200000    1100000
      >;
      clocks = <&clocks BCM2835_PLLB_ARM>;
    };
  };
};
